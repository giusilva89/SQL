-- WINDOW is a group of data, a dataset that will an aggregation on and the window changes based on the partition.

-- Computing running total
-- Order by clause is structure the window
-- Range to compute is between the preceding rows and current row.
-- By default, it behaves with a range between an unbounded preceding so there's no need to specify:
-- "UNBOUNCED PRECEDING"

SELECT first_name, hire_date, salary,
SUM(salary) OVER(ORDER BY hire_date RANGE BETWEEN UNBOUNDED PRECEDING
                 AND CURRENT ROW) as running_total_of_salaries

FROM employees;


SELECT first_name, hire_date, salary,
AVG(salary) OVER(ORDER BY hire_date RANGE BETWEEN UNBOUNDED PRECEDING
                 AND CURRENT ROW) as running_average_of_salaries

FROM employees;


-- This query will have the same output
SELECT first_name, hire_date, salary,
SUM(salary) OVER(ORDER BY hire_date) as running_total_of_salaries

FROM employees;

-- Running total based on departments (PARTITION BY)
SELECT first_name, hire_date, department, salary,
SUM(salary) OVER(PARTITION BY department ORDER BY hire_date) as running_total_of_salaries
FROM employees;


-- Add the adjacent salaries
SELECT first_name, hire_date, department, salary,
SUM(salary) OVER(ORDER BY hire_date ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) -- Add current salary to 1 row precending
FROM employees;


SELECT first_name, hire_date, department, salary,
SUM(salary) OVER(ORDER BY hire_date ROWS BETWEEN 3 PRECEDING AND CURRENT ROW) -- Add current salary to 3 row precending
FROM employees;



