SELECT first_name, salary,
CASE
	WHEN salary < 100000 THEN 'UNDER PAID'
	WHEN salary > 100000 AND salary < 160000 THEN 'PAID WELL' 
	WHEN salary > 160000 THEN 'EXECUTIVE'
	ELSE 'UNKNOWN'
END	as salary_category
FROM employees
ORDER BY salary DESC; 

-- Provide the count of salary by salary category

SELECT a.salary_category, COUNT(a.salary_category) as category_count
FROM
(SELECT first_name, salary,
CASE
	WHEN salary < 100000 THEN 'UNDER PAID'
	WHEN salary > 100000 AND salary < 160000 THEN 'PAID WELL' 
	WHEN salary > 160000 THEN 'EXECUTIVE'
	ELSE 'UNKNOWN'
END	as salary_category
FROM employees
ORDER BY salary DESC) a  -- Source!
GROUP BY a.salary_category; 

-- Transposing rows into columns
-- First approach using COUNT and Subquery
SELECT 
COUNT(CASE WHEN a.salary_category = 'UNDER PAID' THEN a.salary_category END) as under_paid,
COUNT(CASE WHEN a.salary_category = 'PAID WELL' THEN a.salary_category END) as paid_well,
COUNT(CASE WHEN a.salary_category = 'EXECUTIVE' THEN a.salary_category END) as executive,
COUNT(CASE WHEN a.salary_category = 'UNKNOWN' THEN a.salary_category END) as unknown
FROM
(SELECT first_name, salary,
CASE
	WHEN salary < 100000 THEN 'UNDER PAID'
	WHEN salary > 100000 AND salary < 160000 THEN 'PAID WELL' 
	WHEN salary > 160000 THEN 'EXECUTIVE'
	ELSE 'UNKNOWN'
END	as salary_category
FROM employees
ORDER BY salary DESC) a; 

-- Optimised approach using SUM
SELECT 
SUM(CASE WHEN salary < 100000  THEN 1 ELSE 0 END) as under_paid,
SUM(CASE WHEN salary > 100000 AND salary < 160000  THEN 1 ELSE 0 END) as paid_well,
SUM(CASE WHEN salary > 160000 THEN 1 ELSE 0 END) as executive
FROM employees;


